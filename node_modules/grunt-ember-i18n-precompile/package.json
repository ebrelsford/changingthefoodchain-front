{
  "name": "grunt-ember-i18n-precompile",
  "description": "This is a helper task for Ember.I18n that let you precompile your language files so it can be used on a site without the handlebars compiler loaded on the client. ",
  "version": "0.0.2",
  "homepage": "https://github.com/karl-sjogren/grunt-ember-i18n-precompile",
  "author": {
    "name": "Karl-Johan Sjören",
    "email": "karl-johan.sjogren@openlibrarysolutions.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/karl-sjogren/grunt-ember-i18n-precompile.git"
  },
  "bugs": {
    "url": "https://github.com/karl-sjogren/grunt-ember-i18n-precompile/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/karl-sjogren/grunt-ember-i18n-precompile/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1",
    "handlebars": "~1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1",
    "handlebars": "~1"
  },
  "keywords": [
    "ember",
    "ember-i18n",
    "emberjs",
    "i18n",
    "ember-i18n-precompile",
    "precompile"
  ],
  "readme": "﻿# grunt-ember-i18n-precompile [![Build Status](https://travis-ci.org/karl-sjogren/grunt-ember-i18n-precompile.png?branch=master)](https://travis-ci.org/karl-sjogren/grunt-ember-i18n-precompile)\r\n\r\nThis is a helper task for [Ember.I18n](https://github.com/jamesarosen/ember-i18n) that let you easily split your language files into several per language that are then combined using grunt. \r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-ember-i18n-precompile --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-ember-i18n-precompile');\r\n```\r\n\r\n## The \"ember_i18n_precompile\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `ember_i18n_precompile` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ember_i18n_precompile: {\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ember_i18n_precompile: {\r\n    files: {\r\n      'dest/en.js': 'app/languages/en.js'\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).",
  "readmeFilename": "README.md",
  "_id": "grunt-ember-i18n-precompile@0.0.2",
  "_shasum": "59600b19638bb6008a6eecdf70208c15c535875f",
  "_from": "grunt-ember-i18n-precompile@",
  "_resolved": "https://registry.npmjs.org/grunt-ember-i18n-precompile/-/grunt-ember-i18n-precompile-0.0.2.tgz"
}
